Metadata-Version: 2.3
Name: dbt-adapters
Version: 1.7.0
Summary: The set of adapter protocols and base functionality that supports integration with dbt-core
Project-URL: Homepage, https://github.com/dbt-labs/dbt-adapters
Project-URL: Documentation, https://docs.getdbt.com
Project-URL: Repository, https://github.com/dbt-labs/dbt-adapters.git
Project-URL: Issues, https://github.com/dbt-labs/dbt-adapters/issues
Project-URL: Changelog, https://github.com/dbt-labs/dbt-adapters/blob/main/CHANGELOG.md
Author-email: dbt Labs <info@dbtlabs.com>
Maintainer-email: dbt Labs <info@dbtlabs.com>
License-File: LICENSE
Keywords: adapter,adapters,database,dbt,dbt Cloud,dbt Core,dbt Labs,dbt-core,elt
Classifier: Development Status :: 5 - Production/Stable
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX :: Linux
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Python: >=3.8.0
Requires-Dist: agate<2.0,>=1.0
Requires-Dist: dbt-common<2.0,>=1.8
Requires-Dist: mashumaro[msgpack]<4.0,>=3.0
Requires-Dist: protobuf<5.0,>=3.0
Requires-Dist: pytz>=2015.7
Requires-Dist: typing-extensions<5.0,>=4.0
Description-Content-Type: text/markdown

<p align="center">
  <img src="https://raw.githubusercontent.com/dbt-labs/dbt/ec7dee39f793aa4f7dd3dae37282cc87664813e4/etc/dbt-logo-full.svg" alt="dbt logo" width="500"/>
</p>

# dbt-tests-adapter

This package is responsible for:

- defining database connection methods
- caching information from databases
- determining how relations are defined

There are two major adapter types: base and sql

# Directories

## `base`

Defines the base implementation Adapters can use to build out full functionality.

## `sql`

Defines a sql implementation for adapters that initially inherits the base implementation
and comes with some pre-made methods and macros that can be overwritten as needed per adapter.
(most common type of adapter.)

# Files

## `cache.py`

Cached information from the database.

## `factory.py`

Defines how we generate adapter objects

## `protocol.py`

Defines various interfaces for various adapter objects. Helps mypy correctly resolve methods.

## `reference_keys.py`

Configures naming scheme for cache elements to be universal.
